# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 65536;
}

http {
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    client_max_body_size 50m;
    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream third{
        server 127.0.0.1:9003;
    }

    server {
       listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        default_type        application/octet-stream;

     location ^~/admin/{
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_pass http://127.0.0.1:8080;
     }

     location ^~/static/{
	add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_pass http://127.0.0.1:8080/static/;
     }

     location ^~/captcha{
        proxy_pass http://127.0.0.1:8080;
     }


     location /manghe/houtai/ {
        client_max_body_size 100m;
        add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
        if ($request_method = OPTIONS){
             return 204;
        }
             proxy_set_header Host $host;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_pass http://127.0.0.1:9002/;
     }

     location /manghe/notoken/ {
        client_max_body_size 100m;
        add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
        if ($request_method = OPTIONS){
             return 204;
        }
             proxy_set_header Host $host;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_pass http://127.0.0.1:9000/;
     }

     location /manghe/user/ {
        client_max_body_size 100m;
        add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
        if ($request_method = OPTIONS){
             return 204;
        }
             proxy_set_header Host $host;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_pass http://127.0.0.1:9001/;
     }   
  }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

    server {
         listen 443 ssl http2;
	listen [::]:443 ssl http2;
    #配置HTTPS的默认访问端口为443。
    #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
    #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
         server_name api.boxhehe.com; #需要将yourdomain.com替换成证书绑定的域名。
         root html;
         index index.html index.htm;
         ssl_certificate /home/www/ssl/api_file/6725154_api.boxhehe.com.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
         ssl_certificate_key /home/www/ssl/api_file/6725154_api.boxhehe.com.key; #需要将cert-file-name.key替换成已上传的证书私钥文件的名称。
         ssl_session_timeout 5m;
         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #表示使用的加密套件的类型。
         ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型。
        ssl_prefer_server_ciphers on;
    	location / {
		proxy_set_header Host $host;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Real-IP $remote_addr;
        	proxy_pass http://127.0.0.1;
   	}

       location /third/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://third/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
        }


    }

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name ios.manghemall.com;
  root html;
  index index.html index.htm;
  ssl_certificate /home/www/ssl/api_file/7233426_ios.manghemall.com.pem;
  ssl_certificate_key /home/www/ssl/api_file/7233426_ios.manghemall.com.key;
  ssl_session_timeout 5m;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
  ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  location / {
   proxy_set_header Host $host;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_pass http://127.0.0.1;
  }
 }

}

