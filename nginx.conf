# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 65536;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    upstream kong {
        server 127.0.0.1:8000;
    }


    upstream houtai{
        server 127.0.0.1:3580;
    }

    upstream gamevideo{
        server 127.0.0.1:3580;
    }

    upstream chat{
        server 127.0.0.1:3801;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        default_type        application/octet-stream;

        location /houtai/ {
            #add_header Access-Control-Allow-Origin *;
            #add_header Access-Control-Allow-Methods *;
            #add_header Access-Control-Allow-Headers *;
            client_max_body_size 100m;
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://houtai/;
        }

        location /chat/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://chat/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
        }


        location /gamevideo/ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods *;
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://gamevideo;
        }


        location /avatar/ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods *;
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://gamevideo;
        }

        location /huati/ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods *;
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://gamevideo;
        }


        location /feedback/ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods *;
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://gamevideo;
        }


        location /app/apis/fk/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://houtai/;
        }


        location /app/apis/ca/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
                return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://houtai/;
        }

        location /app/apis/ht/ {
            client_max_body_size 100m;
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
                return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://houtai/;
        }


        location /app/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://kong/;
        }


        location /connect/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }

            proxy_pass https://open.weixin.qq.com;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        ssl_certificate "/etc/pki/nginx/y.pem";
        ssl_certificate_key "/etc/pki/nginx/y.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1/;

        }

        location /chat/ {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,AccessToken,X-CSRF-Token, Authorization, Token';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type';
            if ($request_method = OPTIONS){
               return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://chat/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen       8080 default_server;
        root         /usr/share/nginx/h5;
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        #location ~ .*?\.(js|css|jpg|png|jpeg|less|sass)   # 规则
        #{
        #    root /usr/share/nginx/html;  # web目录
        #    expires 3d;  # 文件缓存时间
        #    rewrite .*?([^\/\\\]*?\.(js|css|jpg|png|jpeg|less|sass)) /dist/$1 break; # rewrite：指令； .*?([^\/\\])*?\.(js|css|jpg|png|jpeg|less|sass)：匹配文件的正则； /dist/$1：($1正则匹配分组1内容，即文件名)重>定向的文件路径
        #}
        location / {
                # 目录路径
                #root /usr/share/nginx/html;
                # try_files：检查文件； $uri：监测的文件路径； /index.html：文件不存在重定向的新路径 
                try_files $uri /index.html;
                index index.html index.htm index.php;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen       8081 default_server;
        root         /usr/share/nginx/houtai;
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        #location ~ .*?\.(js|css|jpg|png|jpeg|less|sass)   # 规则
        #{
        #    root /usr/share/nginx/html;  # web目录
        #    expires 3d;  # 文件缓存时间
        #    rewrite .*?([^\/\\\]*?\.(js|css|jpg|png|jpeg|less|sass)) /dist/$1 break; # rewrite：指令； .*?([^\/\\])*?\.(js|css|jpg|png|jpeg|less|sass)：匹配文件的正则； /dist/$1：($1正则匹配分组1内容，即文件名)重>定向的文件路径
        #}
        location / {
                # 目录路径
                #root /usr/share/nginx/html;
                # try_files：检查文件； $uri：监测的文件路径； /index.html：文件不存在重定向的新路径 
                try_files $uri /index.html;
                index index.html index.htm index.php;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }


}

